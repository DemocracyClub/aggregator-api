@import 'partials/_switcher.scss';
@import 'partials/_fonts.scss';
@import 'partials/_variables.scss';
@import 'partials/_type.scss';
@import 'partials/_forms.scss';
@import 'partials/_description-lists.scss';
@import 'partials/_button.scss';
@import 'partials/_call-to-action.scss';
@import 'partials/_details.scss';
@import 'partials/_stack.scss';
@import 'partials/_cluster.scss';
@import 'partials/_grid.scss';
@import 'partials/_sidebar.scss';
@import 'partials/_breadcrumbs.scss';
@import 'partials/_card.scss';
@import 'partials/_candidate.scss';
@import 'partials/_table.scss';
@import 'partials/_language.scss';
@import 'partials/_header.scss';
@import 'partials/_subnav.scss';
@import 'partials/_footer.scss';
@import 'partials/_radio.scss';
@import 'partials/_checkbox.scss';
@import 'partials/_select.scss';
@import 'partials/_filter.scss';
@import 'partials/_status.scss';
@import 'partials/_codeblock.scss';
@import 'partials/_dark.scss';
@import 'partials/_page.scss';
@import 'partials/_map-leaflet.scss';
@import 'partials/_utilities.scss';
@import 'partials/_logo.scss';
// // Generate atomic classes for documentation demos
@import 'partials/_classes-colors.scss';
@import 'partials/_classes-scales.scss';
$scope: false;
@mixin optional-styles {
  @include switcher;
  @include description-lists;
  @include button;
  @include cta;
  @include cluster;
  @include grid;
  @include sidebar;
  @include details;
  @include card;
  @include candidate;
  @include breadcrumbs;
  @include table;
  @include language;
  @include header;
  @include subnav;
  @include footer;
  @include radio;
  @include checkbox;
  @include select;
  @include filter;
  @include status;
  @include codeblock;
  @include map-leaflet;
  @include logo;
}

@if $scope {
  .ds-scope {
    font-size: clamp(#{$s1}, 2vw, #{$s2});
    @include fontMain;
    @include type;
    @include forms;
    @include stack;
    @include optional-styles;
    @include dark;
    @include page;
    @include utilities;
  }
  .ds-scope *,
  .ds-scope *::before,
  .ds-scope *::after {
    box-sizing: border-box;
  }

  body {margin:0;}
}

@else {
  body {
    // font-size: 100%;
    font-size: clamp(#{$s1}, 2vw, #{$s2});
    @include fontMain;
  }
  body *,
  body *::before,
  body *::after {
    box-sizing: border-box;
  }
  body {
    margin: 0;
  }
  @include type;
  @include forms;
  @include stack;
  @include optional-styles;
  @include dark;
  @include page;
  @include utilities;
}

.api-method {
  border-radius: 5px;
  padding: 0.2em 0.5em;
}

.api-http-code {
  cursor: pointer;
}

.api-method-GET {
  background-color: $greenForWhite;
  color: #FFF;
}

.api-resource, .api-resource-group {
  @extend .ds-stack;
}

.api-resource * {
  @extend .ds-stack-smaller
}

.api-action {
  display: flex;
  flex-wrap: wrap;
  margin: -1em;
  margin-top: 3.05176rem;
  >*:first-child {
    flex-basis: 100%;
    @extend .ds-stack;
  }
  >* {
    flex: 1 0 20em;
    @extend .ds-stack;
    flex-basis: 45%;
    margin-right:1em
  }
}

.api-description {
  @extend .ds-stack-smaller;
}

.api-action-transaction {
  @extend .ds-card;
  padding:1em;
}

main.wide {
  width:95%;
  max-width: 100em;
}

.ds-dark code, pre {
  background-color: $darkBlack;
}

.ds-dark input,
.ds-dark select,
.ds-dark textarea {
  color: $black;
}

pre {
  display: block;
  padding: 1em;
  max-width: 40em;
  overflow-x: scroll;
  max-height: 20em;
  @extend .ds-codeblock;
  white-space: nowrap;

}

input, button,
textarea, select {
  font: inherit;
}

textarea:not([rows]) {
  min-height: 10em;
}
