# https://circleci.com/docs/2.0/configuration-reference/

version: 2.1

jobs:

  install_and_update_dependencies:
    docker:
      - image: circleci/python:3.6.12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "Pipfile.lock" }}
          - v2-dependencies-
      - run: &install-pipenv sudo pip install pipenv --quiet --no-input
      - run: pipenv install --dev
      - run: pipenv check # before save_cache so an insecure cache is never saved
      - run: mkdir -p ~/workspace
      - run: make lambda-layers/DependenciesLayer/requirements.txt
      - persist_to_workspace:
          root: ~/repo/
          paths: [ lambda-layers/DependenciesLayer/requirements.txt ]
      - save_cache:
          when: on_success
          paths:
            - ~/.local/share/virtualenvs/
          key: v2-dependencies-{{ checksum "Pipfile.lock" }}

  test:
    docker:
      - image: circleci/python:3.6.12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "Pipfile.lock" }}
          - v2-dependencies-
      - run: *install-pipenv
      - run: pipenv run black-check
      - run: pipenv run pytest --flakes
      - run: pipenv run pytest --cov-report= --cov=aggregator --junitxml=test-results/junit.xml
      - run: SECRET_KEY=notasecretkey pipenv run ./manage.py build_docs
      - run: |
          if [ -n "$COVERALLS_REPO_TOKEN" ]; then
            pipenv run coveralls
          else
            echo "skipping coverage for forked PR"
          fi
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results

  sam_build:
    docker:
      - image: amazon/aws-sam-cli-build-image-python3.6:latest
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/
      - run: pip install --upgrade pip
      - run: pip install -r lambda-layers/DependenciesLayer/requirements.txt
      - run: make collectstatic
      - run: sam build
      - persist_to_workspace:
          root: ~/repo/
          paths: [ .aws-sam/build/ ]

  sam_deploy:
    docker:
      - image: circleci/python:3.6.12
    working_directory: ~/repo/
    parameters:
      dc-environment:
        type: enum
        enum:
          - "staging"
          - "production"
      dc-django-settings-module:
        type: string
        default: aggregator.settings.lambda_no_debug_merged_assets
    environment:
      DC_ENVIRONMENT: "<<parameters.dc-environment>>"
      DJANGO_SETTINGS_MODULE: "<<parameters.dc-django-settings-module>>"
      SAM_CONFIG_FILE: samconfig.toml.d/<<parameters.dc-environment>>.toml
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "Pipfile.lock" }}
          - v2-dependencies-
      - run: *install-pipenv

      - run: printenv DC_ENVIRONMENT DJANGO_SETTINGS_MODULE PUBLIC_FQDN CERTIFICATE_ARN | tr a-z A-Z
      - run: printenv SECRET_KEY | md5sum
      - run: printenv AWS_ACCESS_KEY_ID | md5sum

      - run:
          name: pipenv run sam deploy --config-env <<parameters.dc-environment>>
          command: |
            pipenv run sam deploy \
              --config-file ~/repo/${SAM_CONFIG_FILE} \
              --config-env $DC_ENVIRONMENT \
              --template-file ~/repo/.aws-sam/build/template.yaml \
              --parameter-overrides " \
                 AppDjangoSettingsModule=$DJANGO_SETTINGS_MODULE \
                 AppSecretKey=$SECRET_KEY \
                 AppIsBehindCloudFront=True \
                "

      - run:
          name: pipenv run sam deploy --config-env <<parameters.dc-environment>>-public-access
          command: |
            pipenv run sam deploy \
              --config-file ~/repo/${SAM_CONFIG_FILE} \
              --config-env ${DC_ENVIRONMENT}-public-access \
              --template-file ~/repo/public-access-template.yaml \
              --parameter-overrides " \
                 StackNameSuffix=$DC_ENVIRONMENT \
                 CertificateArn=$CERTIFICATE_ARN \
                 PublicFqdn=$PUBLIC_FQDN \
                "

      - run:
          environment:
            APP_CONFIG_ENV: <<parameters.dc-environment>>
            CDN_CONFIG_ENV: <<parameters.dc-environment>>-public-access
          command: pipenv run pytest -vrP --disable-warnings .circleci/tests/system/

workflows:
  version: 2
  test_build_deploy:
    jobs:
      - install_and_update_dependencies
      - test:
          requires: [ install_and_update_dependencies ]
      - sam_build:
          requires: [ install_and_update_dependencies ]
      - sam_deploy:
          name: sam_deploy_staging
          dc-environment: staging
          requires: [ sam_build, test ]
          context: [ deployment-staging-aggregator-api ]
          filters:
            branches:
              only: [ aws-ci-cd ]
#      - sam_deploy:
#          name: sam_deploy_production
#          dc-environment: production
#          requires: [ sam_deploy_staging ]
#          context: [ deployment-production-aggregator-api ]
#          filters:
#            branches:
#              only: [ aws-ci-cd ]
